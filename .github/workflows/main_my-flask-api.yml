# Déploiement automatique de l'API Flask sur Azure depuis GitHub
name: Build and deploy Python app to Azure Web App - my-flask-api

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Requis pour actions/checkout

    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Configurer Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Créer et activer un environnement virtuel
        run: |
          python -m venv venv
          source venv/bin/activate

      - name: Installer les dépendances
        run: pip install -r requirements.txt

      # Optionnel : Ajouter des tests ici (PyTest, unittest, etc.)

      - name: Préparer l'archive pour le déploiement
        run: zip -r release.zip . -x "venv/*" ".git/*" ".github/*"

      - name: Upload l'archive pour le déploiement
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
    permissions:
      id-token: write # Requis pour l'authentification OIDC

    steps:
      - name: Télécharger l'archive de l'étape de build
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Décompresser l'archive
        run: unzip release.zip

      - name: Se connecter à Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}

      - name: Déployer sur Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'my-flask-api'
          package: '.'
